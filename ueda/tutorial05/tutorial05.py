# -*- coding: utf-8 -*-
"""Tutorial05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HMV-Ijll8xZvC4vCA9LOrctTDQnEVcpL
"""

!git clone https://github.com/neubig/nlptutorial.git #gitからCloneする

from collections import defaultdict

def predict_one(w, phi):
  score = 0
  for name, value in phi.items():
    if name in w:
      score += value*w[name]
  if score>=0:
    return 1
  else:
    return -1

def create_features(x):
  phi = defaultdict(lambda: 0)
  words = x.split(" ")
  for word in words:
    phi["UNI:"+word] +=1
  return phi

def update_weights(w, phi, y):
  for name, value in phi.items():
    w[name]+=value*int(y)

def predict_all(w, input_file):
  wa = defaultdict(lambda: 0)
  with open("/content/my_answer.txt", 'w', encoding="utf-8") as f:
    for x in input_file:
      x = x.strip()
      phi = create_features(x)
      yd = predict_one(w, phi)
      f.write(str(yd)+"\t"+x+"\n")

def perceptron(iteration, data_name):
  w = defaultdict(lambda: 0)
  for i in range(iteration):
    with open(data_name, encoding="utf-8") as data:
      for line in data:
        y,x = line.strip().split('\t')
        phi = create_features(x)
        yd = predict_one(w, phi)
        if int(yd) != int(y):
          update_weights(w, phi, y)
  return w

#必要なファイルを読みこみ
train_input = open('/content/nlptutorial/test/03-train-input.txt', encoding="utf-8")

#プログラムのテスト
w = perceptron(10, '/content/nlptutorial/test/03-train-input.txt')
for i in w.items():
  print(i)

#演習問題
train_input = open('/content/nlptutorial/data/titles-en-train.labeled', encoding="utf-8")
test_input = open('/content/nlptutorial/data/titles-en-test.word', encoding="utf-8")
w = perceptron(100,'/content/nlptutorial/data/titles-en-train.labeled')
predict_all(w, test_input)

'''
iteration = 1 --> 90.967056%
iteration = 5 --> 91.852639%
iteration = 10 --> 93.446688%
iteration = 15 --> 93.057032%
iteration = 20 --> 93.234148%
'''